info <- read_excel(
archivo,
range = paste("'" , hojas[i], "'!B4:B5", sep = "") ,
col_names = FALSE,
col_types = "text",
)
# Extraemos el texto de la cadena de caracteres
anio <- as.numeric((str_extract(info[2, ], "\\d{4}")))
unidad <- toString(info[1, ]) # unidad de medida
# precios Corrientes o medidas Encadenados
if (unidad != "Millones de quetzales") {
precios <- "Encadenados"
unidad <- c("Millones de quetzales en medidas encadenadas de volumen con año de referencia 2013")
}
else {
precios <- "Corrientes"
}
# Cuadro de Oferta
# ================
oferta <- as.matrix(read_excel(
archivo,
range = paste("'" , hojas[i], "'!D11:DT162", sep = ""),
# Nótese que no incluimos la fila de totales
col_names = FALSE,
col_types = "numeric"
))
rownames(oferta) <- c(sprintf("of%03d", seq(1, dim(oferta)[1])))
colnames(oferta) <- c(sprintf("oc%03d", seq(1, dim(oferta)[2])))
# Columnas a eliminar con subtotales y totales
# 93	P1 PRODUCCION (PB)	Producción de mercado		SUBTOTAL DE MERCADO
# 98	P1 PRODUCCION (PB)	Producción para uso final propio		SUBTOTAL USO FINAL PROPIO
# 108	P1 PRODUCCION (PB)	Producción no de mercado		SUBTOTAL NO DE MERCADO
# 109	P1 TOTAL PRODUCCION (PB)
# 112	P7 IMPORTACIONES (CIF)	TOTAL		TOTAL
# 118	D21 IMPUESTOS SOBRE PRODUCTOS	TOTAL		TOTAL
# 121	TOTAL OFERTA (PC)	TOTAL OFERTA (PC)
oferta <- oferta[, -c(93, 98, 108, 109, 112, 118, 121)]
# Desdoblamos
oferta <- cbind(anio, precios,1, "Oferta", melt(oferta), unidad)
colnames(oferta) <-
c("Año",
"Precios",
"No. Cuadro",
"Cuadro",
"Filas",
"Columnas",
"Valor",
"Unidades")
# Cuadro de utilización
# =====================
utilizacion <- as.matrix(read_excel(
archivo,
range = paste("'" , hojas[i], "'!D169:DQ320", sep = ""),
# Nótese que no incluimos la fila de totales
col_names = FALSE,
col_types = "numeric"
))
rownames(utilizacion) <-
c(sprintf("uf%03d", seq(1, dim(utilizacion)[1])))
colnames(utilizacion) <-
c(sprintf("uc%03d", seq(1, dim(utilizacion)[2])))
#   Columnas a eliminar con subtotales y totales
#   uc093	P2 CONSUMO INTERMEDIO (PC)	SUBTOTAL DE MERCADO
#   uc098	P2 CONSUMO INTERMEDIO (PC)	SUBTOTAL USO FINAL PROPIO
#   uc108	P2 CONSUMO INTERMEDIO (PC)	SUBTOTAL NO DE MERCADO
#   uc109	"P2 TOTAL CONSUMO INTERMEDIO
#   uc112	P6 EXPORTACIONES (FOB)
#   uc115	P3 GASTO DE CONSUMO FINAL
#   uc118	TOTAL UTILIZACIÓN
utilizacion <- utilizacion[, -c(93, 98, 108, 109, 112, 115, 118)]
# Desdoblamos
utilizacion <-
cbind(anio,
precios,
2,
"Utilización",
melt(utilizacion),
unidad)
colnames(utilizacion) <-
c("Año",
"Precios",
"No. Cuadro",
"Cuadro",
"Filas",
"Columnas",
"Valor",
"Unidades")
# Cuadros de Valor Agregado y empleo solo para precios Corrientes
# ========================
if (precios == "Corrientes") {
# Cuadro de Valor Agregado
# ========================
valorAgregado <- as.matrix(read_excel(
archivo,
range = paste("'" , hojas[i], "'!D325:DH330", sep = ""),
col_names = FALSE,
col_types = "numeric"
))
rownames(valorAgregado) <-
c(sprintf("vf%03d", seq(1, dim(valorAgregado)[1])))
colnames(valorAgregado) <-
c(sprintf("vc%03d", seq(1, dim(valorAgregado)[2])))
#   Columnas a eliminar con subtotales y totales
#   vc093	SUBTOTAL DE MERCADO
#   vc098	SUBTOTAL USO FINAL PROPIO
#   vc108	SUBTOTAL NO DE MERCADO
#   vc109 TOTAL
valorAgregado <- valorAgregado[, -c(93, 98, 108, 109)]
# Desdoblamos
valorAgregado <-
cbind(anio,
precios,
3,
"Valor Agregado",
melt(valorAgregado),
unidad)
colnames(valorAgregado) <-
c("Año",
"Precios",
"No. Cuadro",
"Cuadro",
"Filas",
"Columnas",
"Valor",
"Unidades")
# Empleo
# ======
empleo <- as.data.frame(read_excel(
archivo,
range = paste("'" , hojas[i], "'!D332:DH332", sep = ""),
col_names = FALSE,
col_types = "numeric"
))
rownames(empleo) <- c(sprintf("ef%03d", seq(1, dim(empleo)[1])))
colnames(empleo) <- c(sprintf("ec%03d", seq(1, dim(empleo)[2])))
#   Columnas a eliminar con subtotales y totales
#   vc093	SUBTOTAL DE MERCADO
#   vc098	SUBTOTAL USO FINAL PROPIO
#   vc108	SUBTOTAL NO DE MERCADO
#   vc109 TOTAL
empleo <- empleo[, -c(93, 98, 108, 109)]
#Desdoblamos
empleo <- cbind(anio,
precios,
4,
"Empleo",
"ef001",
melt(empleo),
"Puestos de trabajo")
colnames(empleo) <- c("Año",
"Precios",
"No. Cuadro",
"Cuadro",
"Filas",
"Columnas",
"Valor",
"Unidades")
}
# Unimos todas las partes
if (precios == "Corrientes") {
union <- rbind(oferta,
utilizacion,
valorAgregado,
empleo)
assign(paste("COU_", anio, "_", precios, sep = ""),
union)
}
else {
union <- rbind(oferta, utilizacion)
assign(paste("COU_", anio, "_", precios, sep = ""),
union)
}
lista <- c(lista, paste("COU_", anio, "_", precios, sep = ""))
}
# Actualizamos nuestra lista de objetos creados
lista <- lapply(lista[-1], as.name)
# Unimos los objetos de todos los años y precios
SCN <- do.call(rbind.data.frame, lista)
# Y borramos los objetos individuales
do.call(rm,lista)
# Le damos significado a las filas y columnas
clasificacionColumnas <- read_xlsx(
"filas_y_columnas.xlsx",
sheet = "columnas",
col_names = TRUE,
)
clasificacionFilas <- read_xlsx(
"filas_y_columnas.xlsx",
sheet = "filas",
col_names = TRUE,
)
SCN <- join(SCN,clasificacionColumnas,by = "Columnas")
SCN <- join(SCN,clasificacionFilas, by = "Filas")
gc()
# Y lo exportamos a Excel
write.xlsx(
SCN,
"SCN_BD.xlsx",
sheetName= "SCNGT_BD",
rowNames=FALSE,
colnames=FALSE,
overwrite = TRUE,
asTable = FALSE
)
# El formato CSV se exporta muy grande, pero se comprime muy bien a 3mb
# write.csv(
#   SCN,
#   "scn.csv",
#   col.names = TRUE,
#   row.names = FALSE,
#   fileEncoding = "latin1"
# )
View(SCN)
2 + 2
install.packages(readxl)
install.packages("readxl")
library(readxl)
library(openxlsx)
library(reshape2)
library(stringr)
library(plyr)
ls()
a <- 2
b<-3
ls()
rm(a)
rm(list = ls())
a <- 2
b<-3
rm(list = ls())
# Limpiar el área de trabajo
rm(list = ls())
wd <- "C:/Users/renato/GitHub/scn_gt/datos"
wd
wd
getwd()
setwd(wd)
getwd()
archivo <- "GTM_COU_2013-2019.xlsx"
excel_sheets(archivo)
excel_sheets("C:/Users/renato/OneDrive/WORK/2022-004-CEPAL-Bioeconomia_LATAM/datos/COL/datos/COU_2014-2019_PRECIOSCORRIENTES_66x61_REFERENCIA.xlsx")
excel_sheets("C:/Users/renato/OneDrive/WORK/2022-004-CEPAL-Bioeconomia_LATAM/datos/COL/datos/COU_2014-2019_PRECIOSCORRIENTES_66x61_REFERENCIA.xlsx")
excel_sheets("C:/Users/renato/OneDrive/WORK/2022-004-CEPAL-Bioeconomia_LATAM/datos/COL/datos/COU_2014-2019_PRECIOSCORRIENTES_66x61_REFERENCIA.xlsx")
excel_sheets(archivo)
hojas <- excel_sheets(archivo)
hojas
archivo <- "GTM_COU_2013-2019.xlsx"
excel_sheets(archivo)
getwd()
archivo <- "GTM_COU_2013-2019.xlsx"
hojas <- excel_sheets(archivo)
hojas
length(hojas)
hojas[3]
c("elemento1", "elemento2", "elemento3")
hojas[c(3, 15)]
hojas[-3]
hojas[-c(1, 15)]
hojas <- hojas[ -c(1, 15) ]
lista <- c("inicio")
i <- 1
length(hojas)
info <- read_excel(
archivo,
range = paste("'" , hojas[i], "'!B4:B5", sep = "") ,
col_names = FALSE,
col_types = "text",
)
paste( "Renato", "Vargas"  )
paste( "Renato", "Vargas" , sep = "_" )
paste( "Renato", "Vargas" , sep = "" )
paste( "Renato", " ", "Vargas" , sep = "" )
hojas[13]
i
hojas[i]
paste("'" , hojas[i], "'!B4:B5", sep = "")
paste("'" , hojas[i], "'!B4:B5", sep = "")
help("read_excel")
help(read_excel)
info <- read_excel(
archivo,
range = paste("'" , hojas[i], "'!B4:B5", sep = "") ,
col_names = FALSE,
col_types = "text",
)
View(info)
View(info)
info
info[2]
dim(info)
info[2,1]
info[ , 1]
info[ 2, ]
info[2, ]
str_extract(info[2, ], "\\d{4}")
as.numeric((str_extract(info[2, ], "\\d{4}")))
anio <- as.numeric((str_extract(info[2, ], "\\d{4}")))
info[1, ]
toString(info[1, ])
i <- 3
info <- read_excel(
archivo,
range = paste("'" , hojas[i], "'!B4:B5", sep = "") ,
col_names = FALSE,
col_types = "text",
)
# Extraemos el texto de la cadena de caracteres
anio <- as.numeric((str_extract(info[2, ], "\\d{4}")))
unidad <- toString(info[1, ]) # unidad de medida
unidad
i <- 1
info <- read_excel(
archivo,
range = paste("'" , hojas[i], "'!B4:B5", sep = "") ,
col_names = FALSE,
col_types = "text",
)
# Extraemos el texto de la cadena de caracteres
anio <- as.numeric((str_extract(info[2, ], "\\d{4}")))
unidad <- toString(info[1, ]) # unidad de medida
if (unidad != "Millones de quetzales") {
precios <- "Encadenados"
unidad <- "Millones de quetzales en medidas encadenadas de volumen con año de referencia 2013"
}
else {
if (unidad != "Millones de quetzales") {
precios <- "Encadenados"
unidad <- "Millones de quetzales en medidas encadenadas de volumen con año de referencia 2013"
}else {
precios <- "Corrientes"
}
if (unidad != "Millones de quetzales") {
precios <- "Encadenados"
unidad <- "Millones de quetzales en medidas encadenadas de volumen con año de referencia 2013"
} else {
precios <- "Corrientes"
}
anio <- as.numeric((str_extract(info[2, ], "\\d{4}")))
unidad <- toString(info[1, ]) # unidad de medida
# precios Corrientes o medidas Encadenados
if (unidad != "Millones de quetzales") {
precios <- "Encadenados"
unidad <- "Millones de quetzales en medidas encadenadas de volumen con año de referencia 2013"
} else {
precios <- "Corrientes"
}
i <- 3
info <- read_excel(
archivo,
range = paste("'" , hojas[i], "'!B4:B5", sep = "") ,
col_names = FALSE,
col_types = "text",
)
# Extraemos el texto de la cadena de caracteres
anio <- as.numeric((str_extract(info[2, ], "\\d{4}")))
unidad <- toString(info[1, ]) # unidad de medida
# precios Corrientes o medidas Encadenados
if (unidad != "Millones de quetzales") {
precios <- "Encadenados"
unidad <- "Millones de quetzales en medidas encadenadas de volumen con año de referencia 2013"
} else {
precios <- "Corrientes"
}
i <- 1
info <- read_excel(
archivo,
range = paste("'" , hojas[i], "'!B4:B5", sep = "") ,
col_names = FALSE,
col_types = "text",
)
# Extraemos el texto de la cadena de caracteres
anio <- as.numeric((str_extract(info[2, ], "\\d{4}")))
unidad <- toString(info[1, ]) # unidad de medida
# precios Corrientes o medidas Encadenados
if (unidad != "Millones de quetzales") {
precios <- "Encadenados"
unidad <- "Millones de quetzales en medidas encadenadas de volumen con año de referencia 2013"
} else {
precios <- "Corrientes"
}
paste("'" , hojas[i], "'!D11:DT162", sep = "")
knitr::opts_chunk$set(echo = TRUE)
as.numeric((str_extract(info[2, ], "\\d{4}"))
a <- 2
a
oferta <- as.matrix(read_excel(
archivo,
range = paste("'" , hojas[i], "'!D10:DT162", sep = ""),
# Nótese que no incluimos la fila de totales
col_names = TRUE,
col_types = "numeric"
))
View(oferta)
oferta <- as.matrix(read_excel(
archivo,
range = paste("'" , hojas[i], "'!D11:DT162", sep = ""),
# Nótese que no incluimos la fila de totales
col_names = FALSE,
col_types = "numeric"
))
View(oferta)
View(oferta)
head(oferta)[,c(1:5)]
1:5
1:10
1:100
seq(1, 10)
seq(1, 10,by=2)
seq(2, 10,by=2)
dim(oferta)
dim(oferta)[1]
dim(oferta)[2]
seq(1, dim(oferta)[1])
sprintf("of%03d", seq(1, dim(oferta)[1])
)
sprintf("of%03d", seq(1, dim(oferta)[1]))
c(sprintf("of%03d", seq(1, dim(oferta)[1])))
View(oferta)
rownames(oferta)
colnames(oferta)
rownames(oferta) <- c(sprintf("of%03d", seq(1, dim(oferta)[1])))
colnames(oferta) <- c(sprintf("oc%03d", seq(1, dim(oferta)[2])))
View(oferta)
View(oferta)
View(oferta)
oferta <- oferta[   , -c(93, 98, 108, 109, 112, 118, 121)]
head(melt(oferta))
cbind(anio, precios,1, "Oferta", melt(oferta), unidad)
oferta <- cbind(anio, precios,1, "Oferta", melt(oferta), unidad)
View(oferta)
colnames(oferta)
colnames(oferta) <-
c("Año",
"Precios",
"No. Cuadro",
"Cuadro",
"Filas",
"Columnas",
"Valor",
"Unidades")
View(oferta)
library(readxl)
library(openxlsx)
library(reshape2)
library(stringr)
library(plyr)
# Limpiar el área de trabajo
rm(list = ls())
# Se pone la ruta de trabajo en una variable (con "/")
wd <- "C:/Users/renato/GitHub/scn_gt/datos"
# Cambiar la ruta de trabajo con la variable anterior
setwd(wd)
# Lógica recursiva
# ================
archivo <- "GTM_COU_2013-2019.xlsx"
hojas <- excel_sheets(archivo)
# extraemos solo las que nos interesan
hojas <- hojas[ -c(1, 15) ]
lista <- c("inicio")
i <- 1
info <- read_excel(
archivo,
range = paste("'" , hojas[i], "'!B4:B5", sep = "") ,
col_names = FALSE,
col_types = "text",
)
# Extraemos el texto de la cadena de caracteres
anio <- as.numeric((str_extract(info[2, ], "\\d{4}")))
unidad <- toString(info[1, ]) # unidad de medida
# precios Corrientes o medidas Encadenados
if (unidad != "Millones de quetzales") {
precios <- "Encadenados"
unidad <- "Millones de quetzales en medidas encadenadas de volumen con año de referencia 2013"
} else {
precios <- "Corrientes"
}
# Cuadro de Oferta
# ================
oferta <- as.matrix(read_excel(
archivo,
range = paste("'" , hojas[i], "'!D11:DT162", sep = ""),
# Nótese que no incluimos la fila de totales
col_names = FALSE,
col_types = "numeric"
))
rownames(oferta) <- c(sprintf("of%03d", seq(1, dim(oferta)[1])))
colnames(oferta) <- c(sprintf("oc%03d", seq(1, dim(oferta)[2])))
# Columnas a eliminar con subtotales y totales
# 93	P1 PRODUCCION (PB)	Producción de mercado		SUBTOTAL DE MERCADO
# 98	P1 PRODUCCION (PB)	Producción para uso final propio		SUBTOTAL USO FINAL PROPIO
# 108	P1 PRODUCCION (PB)	Producción no de mercado		SUBTOTAL NO DE MERCADO
# 109	P1 TOTAL PRODUCCION (PB)
# 112	P7 IMPORTACIONES (CIF)	TOTAL		TOTAL
# 118	D21 IMPUESTOS SOBRE PRODUCTOS	TOTAL		TOTAL
# 121	TOTAL OFERTA (PC)	TOTAL OFERTA (PC)
oferta <- oferta[   , -c(93, 98, 108, 109, 112, 118, 121)]
# Desdoblamos
oferta <- cbind(anio, precios,1, "Oferta", melt(oferta), unidad)
colnames(oferta) <-
c("Año",
"Precios",
"No. Cuadro",
"Cuadro",
"Filas",
"Columnas",
"Valor",
"Unidades")
View(oferta)
oferta2 <- oferta[oferta$Filas="of001",]
oferta2 <- oferta[(oferta$Filas="of001"),]
View(oferta2)
oferta2 <- oferta[oferta$Filas=="of001",]
